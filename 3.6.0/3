{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import re, os\n",
    "import sys"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "'UTF-8'"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "sys.stdout.encoding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "      <th>3</th>\n",
       "      <th>4</th>\n",
       "      <th>5</th>\n",
       "      <th>6</th>\n",
       "      <th>7</th>\n",
       "      <th>8</th>\n",
       "      <th>9</th>\n",
       "      <th>10</th>\n",
       "      <th>11</th>\n",
       "      <th>12</th>\n",
       "      <th>13</th>\n",
       "      <th>14</th>\n",
       "      <th>15</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Real</td>\n",
       "      <td>Madrid</td>\n",
       "      <td>CF</td>\n",
       "      <td>ESP</td>\n",
       "      <td>52</td>\n",
       "      <td>14</td>\n",
       "      <td>464</td>\n",
       "      <td>277</td>\n",
       "      <td>79</td>\n",
       "      <td>108</td>\n",
       "      <td>1021</td>\n",
       "      <td>508</td>\n",
       "      <td>633.0</td>\n",
       "      <td>513.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>FC</td>\n",
       "      <td>Bayern</td>\n",
       "      <td>München</td>\n",
       "      <td>GER</td>\n",
       "      <td>38</td>\n",
       "      <td>6</td>\n",
       "      <td>372</td>\n",
       "      <td>221</td>\n",
       "      <td>75</td>\n",
       "      <td>76</td>\n",
       "      <td>782</td>\n",
       "      <td>367</td>\n",
       "      <td>517.0</td>\n",
       "      <td>415.0</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>FC</td>\n",
       "      <td>Barcelona</td>\n",
       "      <td>ESP</td>\n",
       "      <td>32</td>\n",
       "      <td>5</td>\n",
       "      <td>333</td>\n",
       "      <td>195</td>\n",
       "      <td>75</td>\n",
       "      <td>63</td>\n",
       "      <td>655</td>\n",
       "      <td>331</td>\n",
       "      <td>465</td>\n",
       "      <td>324.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Manchester</td>\n",
       "      <td>United</td>\n",
       "      <td>ENG</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>293</td>\n",
       "      <td>160</td>\n",
       "      <td>69</td>\n",
       "      <td>64</td>\n",
       "      <td>533</td>\n",
       "      <td>284</td>\n",
       "      <td>389</td>\n",
       "      <td>249.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Juventus</td>\n",
       "      <td>ITA</td>\n",
       "      <td>36</td>\n",
       "      <td>2</td>\n",
       "      <td>295</td>\n",
       "      <td>152</td>\n",
       "      <td>70</td>\n",
       "      <td>73</td>\n",
       "      <td>470</td>\n",
       "      <td>288</td>\n",
       "      <td>374</td>\n",
       "      <td>182</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   0           1          2        3    4    5    6    7    8    9    10  \\\n",
       "0   1        Real     Madrid       CF  ESP   52   14  464  277   79  108   \n",
       "1   2          FC     Bayern  München  GER   38    6  372  221   75   76   \n",
       "2   3          FC  Barcelona      ESP   32    5  333  195   75   63  655   \n",
       "3   4  Manchester     United      ENG   30    3  293  160   69   64  533   \n",
       "4   5    Juventus        ITA       36    2  295  152   70   73  470  288   \n",
       "\n",
       "     11   12     13     14  15  \n",
       "0  1021  508  633.0  513.0 NaN  \n",
       "1   782  367  517.0  415.0 NaN  \n",
       "2   331  465  324.0    NaN NaN  \n",
       "3   284  389  249.0    NaN NaN  \n",
       "4   374  182    NaN    NaN NaN  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "path = '../data-output'\n",
    "try:\n",
    "    os.mkdir(path)\n",
    "except OSError as error:\n",
    "    pass  \n",
    "    \n",
    "raw_data = pd.read_csv(\"./raw-data/clubs.csv\",  header=None)\n",
    "raw_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "formatted_data = pd.DataFrame(columns = ['Position','Club','Country','Participated',\n",
    "                                         'Titles','Played','Win','Draw','Loss','Goals For', \n",
    "                                         'Goals Against','Pts','Goal Diff'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "for index, record in raw_data.iterrows():\n",
    "    StartFrom = 0\n",
    "    Position = record[0]\n",
    "    #if (index > 2):\n",
    "    #    break\n",
    "    for i in range(15,1,-1):\n",
    "        if (pd.isna(record[i])):\n",
    "            pass\n",
    "        else:\n",
    "            StartFrom = i\n",
    "            break\n",
    "      \n",
    "    GoalDiff = record[StartFrom]\n",
    "    Points = record[StartFrom-1]\n",
    "    GA = record[StartFrom-2]\n",
    "    GF = record[StartFrom-3]\n",
    "    Loss = record[StartFrom-4]\n",
    "    Draw = record[StartFrom-5]\n",
    "    Win = record[StartFrom-6]\n",
    "    Played = record[StartFrom-7]\n",
    "    Titles = record[StartFrom-8]\n",
    "    Part = record[StartFrom-9]\n",
    "    Country = record[StartFrom-10]\n",
    "    Club = ''\n",
    "    for k in range(1,StartFrom-10):\n",
    "        Club = Club + \" \"  + record[k]\n",
    "    Club = Club.strip()\n",
    "    \n",
    "    club_series = pd.Series([Position,Club,Country,Part,Titles,Played,Win,Draw,Loss,GF,GA,Points,GoalDiff], \n",
    "                           index = ['Position','Club','Country','Participated', 'Titles','Played','Win','Draw',\n",
    "                                    'Loss','Goals For', 'Goals Against','Pts','Goal Diff'] )\n",
    "    formatted_data = formatted_data.append(club_series, ignore_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(530, 13)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "formatted_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Position</th>\n",
       "      <th>Club</th>\n",
       "      <th>Country</th>\n",
       "      <th>Participated</th>\n",
       "      <th>Titles</th>\n",
       "      <th>Played</th>\n",
       "      <th>Win</th>\n",
       "      <th>Draw</th>\n",
       "      <th>Loss</th>\n",
       "      <th>Goals For</th>\n",
       "      <th>Goals Against</th>\n",
       "      <th>Pts</th>\n",
       "      <th>Goal Diff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>Real Madrid CF</td>\n",
       "      <td>ESP</td>\n",
       "      <td>52</td>\n",
       "      <td>14</td>\n",
       "      <td>464</td>\n",
       "      <td>277</td>\n",
       "      <td>79</td>\n",
       "      <td>108</td>\n",
       "      <td>1021</td>\n",
       "      <td>508</td>\n",
       "      <td>633.0</td>\n",
       "      <td>513.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>FC Bayern München</td>\n",
       "      <td>GER</td>\n",
       "      <td>38</td>\n",
       "      <td>6</td>\n",
       "      <td>372</td>\n",
       "      <td>221</td>\n",
       "      <td>75</td>\n",
       "      <td>76</td>\n",
       "      <td>782</td>\n",
       "      <td>367</td>\n",
       "      <td>517.0</td>\n",
       "      <td>415.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>FC Barcelona</td>\n",
       "      <td>ESP</td>\n",
       "      <td>32</td>\n",
       "      <td>5</td>\n",
       "      <td>333</td>\n",
       "      <td>195</td>\n",
       "      <td>75</td>\n",
       "      <td>63</td>\n",
       "      <td>655</td>\n",
       "      <td>331</td>\n",
       "      <td>465.0</td>\n",
       "      <td>324.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>Manchester United</td>\n",
       "      <td>ENG</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>293</td>\n",
       "      <td>160</td>\n",
       "      <td>69</td>\n",
       "      <td>64</td>\n",
       "      <td>533</td>\n",
       "      <td>284</td>\n",
       "      <td>389.0</td>\n",
       "      <td>249.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>Juventus</td>\n",
       "      <td>ITA</td>\n",
       "      <td>36</td>\n",
       "      <td>2</td>\n",
       "      <td>295</td>\n",
       "      <td>152</td>\n",
       "      <td>70</td>\n",
       "      <td>73</td>\n",
       "      <td>470</td>\n",
       "      <td>288</td>\n",
       "      <td>374.0</td>\n",
       "      <td>182.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>525</th>\n",
       "      <td>526</td>\n",
       "      <td>CS Stade Dudelange</td>\n",
       "      <td>LUX</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>526</th>\n",
       "      <td>527</td>\n",
       "      <td>Rabat Ajax FC</td>\n",
       "      <td>MLT</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527</th>\n",
       "      <td>528</td>\n",
       "      <td>Keflavík</td>\n",
       "      <td>ISL</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>35</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>528</th>\n",
       "      <td>529</td>\n",
       "      <td>US Luxembourg</td>\n",
       "      <td>LUX</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>43</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>529</th>\n",
       "      <td>530</td>\n",
       "      <td>FC Avenir Beggen</td>\n",
       "      <td>LUX</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>56</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-55.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>530 rows × 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    Position                Club Country Participated Titles Played  Win Draw  \\\n",
       "0          1      Real Madrid CF     ESP           52     14    464  277   79   \n",
       "1          2   FC Bayern München     GER           38      6    372  221   75   \n",
       "2          3        FC Barcelona     ESP           32      5    333  195   75   \n",
       "3          4   Manchester United     ENG           30      3    293  160   69   \n",
       "4          5            Juventus     ITA           36      2    295  152   70   \n",
       "..       ...                 ...     ...          ...    ...    ...  ...  ...   \n",
       "525      526  CS Stade Dudelange     LUX            1      0      2    0    0   \n",
       "526      527       Rabat Ajax FC     MLT            2      0      4    0    0   \n",
       "527      528            Keflavík     ISL            4      0      8    0    0   \n",
       "528      529       US Luxembourg     LUX            5      0     10    0    0   \n",
       "529      530    FC Avenir Beggen     LUX            6      0     12    0    0   \n",
       "\n",
       "    Loss Goals For Goals Against    Pts  Goal Diff  \n",
       "0    108      1021           508  633.0      513.0  \n",
       "1     76       782           367  517.0      415.0  \n",
       "2     63       655           331  465.0      324.0  \n",
       "3     64       533           284  389.0      249.0  \n",
       "4     73       470           288  374.0      182.0  \n",
       "..   ...       ...           ...    ...        ...  \n",
       "525    2         0            18    0.0      -18.0  \n",
       "526    4         0            20    0.0      -20.0  \n",
       "527    8         5            35    0.0      -30.0  \n",
       "528   10         3            43    0.0      -40.0  \n",
       "529   12         1            56    0.0      -55.0  \n",
       "\n",
       "[530 rows x 13 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "formatted_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "formatted_data.to_csv(\"../data-output/AllTimeRankingByClub.csv\", header=True, index=False, encoding='utf-16')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Club</th>\n",
       "      <th>Country</th>\n",
       "      <th>Participated</th>\n",
       "      <th>Titles</th>\n",
       "      <th>Played</th>\n",
       "      <th>Win</th>\n",
       "      <th>Draw</th>\n",
       "      <th>Loss</th>\n",
       "      <th>Goals For</th>\n",
       "      <th>Goals Against</th>\n",
       "      <th>Pts</th>\n",
       "      <th>Goal Diff</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Position</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Real Madrid CF</td>\n",
       "      <td>ESP</td>\n",
       "      <td>52</td>\n",
       "      <td>14</td>\n",
       "      <td>464</td>\n",
       "      <td>277</td>\n",
       "      <td>79</td>\n",
       "      <td>108</td>\n",
       "      <td>1021</td>\n",
       "      <td>508</td>\n",
       "      <td>633.0</td>\n",
       "      <td>513.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>FC Bayern München</td>\n",
       "      <td>GER</td>\n",
       "      <td>38</td>\n",
       "      <td>6</td>\n",
       "      <td>372</td>\n",
       "      <td>221</td>\n",
       "      <td>75</td>\n",
       "      <td>76</td>\n",
       "      <td>782</td>\n",
       "      <td>367</td>\n",
       "      <td>517.0</td>\n",
       "      <td>415.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>FC Barcelona</td>\n",
       "      <td>ESP</td>\n",
       "      <td>32</td>\n",
       "      <td>5</td>\n",
       "      <td>333</td>\n",
       "      <td>195</td>\n",
       "      <td>75</td>\n",
       "      <td>63</td>\n",
       "      <td>655</td>\n",
       "      <td>331</td>\n",
       "      <td>465.0</td>\n",
       "      <td>324.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Manchester United</td>\n",
       "      <td>ENG</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>293</td>\n",
       "      <td>160</td>\n",
       "      <td>69</td>\n",
       "      <td>64</td>\n",
       "      <td>533</td>\n",
       "      <td>284</td>\n",
       "      <td>389.0</td>\n",
       "      <td>249.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Juventus</td>\n",
       "      <td>ITA</td>\n",
       "      <td>36</td>\n",
       "      <td>2</td>\n",
       "      <td>295</td>\n",
       "      <td>152</td>\n",
       "      <td>70</td>\n",
       "      <td>73</td>\n",
       "      <td>470</td>\n",
       "      <td>288</td>\n",
       "      <td>374.0</td>\n",
       "      <td>182.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>526</th>\n",
       "      <td>CS Stade Dudelange</td>\n",
       "      <td>LUX</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-18.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>527</th>\n",
       "      <td>Rabat Ajax FC</td>\n",
       "      <td>MLT</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-20.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>528</th>\n",
       "      <td>Keflavík</td>\n",
       "      <td>ISL</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>5</td>\n",
       "      <td>35</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-30.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>529</th>\n",
       "      <td>US Luxembourg</td>\n",
       "      <td>LUX</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>43</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-40.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>530</th>\n",
       "      <td>FC Avenir Beggen</td>\n",
       "      <td>LUX</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>56</td>\n",
       "      <td>0.0</td>\n",
       "      <td>-55.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>530 rows × 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                        Club Country Participated Titles Played  Win Draw  \\\n",
       "Position                                                                    \n",
       "1             Real Madrid CF     ESP           52     14    464  277   79   \n",
       "2          FC Bayern München     GER           38      6    372  221   75   \n",
       "3               FC Barcelona     ESP           32      5    333  195   75   \n",
       "4          Manchester United     ENG           30      3    293  160   69   \n",
       "5                   Juventus     ITA           36      2    295  152   70   \n",
       "...                      ...     ...          ...    ...    ...  ...  ...   \n",
       "526       CS Stade Dudelange     LUX            1      0      2    0    0   \n",
       "527            Rabat Ajax FC     MLT            2      0      4    0    0   \n",
       "528                 Keflavík     ISL            4      0      8    0    0   \n",
       "529            US Luxembourg     LUX            5      0     10    0    0   \n",
       "530         FC Avenir Beggen     LUX            6      0     12    0    0   \n",
       "\n",
       "         Loss Goals For Goals Against    Pts  Goal Diff  \n",
       "Position                                                 \n",
       "1         108      1021           508  633.0      513.0  \n",
       "2          76       782           367  517.0      415.0  \n",
       "3          63       655           331  465.0      324.0  \n",
       "4          64       533           284  389.0      249.0  \n",
       "5          73       470           288  374.0      182.0  \n",
       "...       ...       ...           ...    ...        ...  \n",
       "526         2         0            18    0.0      -18.0  \n",
       "527         4         0            20    0.0      -20.0  \n",
       "528         8         5            35    0.0      -30.0  \n",
       "529        10         3            43    0.0      -40.0  \n",
       "530        12         1            56    0.0      -55.0  \n",
       "\n",
       "[530 rows x 12 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "formatted_data.reset_index(drop=True, inplace=True)\n",
    "formatted_data.set_index([\"Position\"])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Position         object\n",
       "Club             object\n",
       "Country          object\n",
       "Participated      int32\n",
       "Titles            int32\n",
       "Played            int32\n",
       "Win               int32\n",
       "Draw              int32\n",
       "Loss              int32\n",
       "Goals For         int32\n",
       "Goals Against     int32\n",
       "Pts               int32\n",
       "Goal Diff         int32\n",
       "dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "formatted_data = formatted_data.astype({'Participated':'int32', 'Titles':'int32', 'Played':'int32','Win':'int32',\n",
    "                                        'Draw':'int32','Loss':'int32','Goals For':'int32', 'Goals Against':'int32',\n",
    "                                        'Pts':'int32','Goal Diff':'int32'})\n",
    "formatted_data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "#del Country_data\n",
    "Country_data = formatted_data.groupby(formatted_data[\"Country\"]).sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "Country_data = Country_data.sort_values(by=['Pts','Win'], ascending=False)\n",
    "Country_data.reset_index(drop=False, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "country_dict = { \"ESP\": \"Spain\", \"ENG\": \"England\", \"ITA\" :\"Italy\", \"GER\":\"Germany\", \"POR\": \"Portugal\",\n",
    "               \"FRA\":\"France\", \"NED\":\"Netherlands\", \"POL\":\"Poland\", \"ROU\":\"Romania\", \"RUS\":\"Russia\", \n",
    "               \"AUT\":\"Austria\", \"SCO\":\"Scotland\", \"SRB\":\"Serbia\", \"SUI\":\"Switzerland\", \"SVK\":\"Slovakia\",\n",
    "               \"SVN\":\"SLovenia\", \"TUR\":\"Turkey\", \"NOR\":\"Norway\", \"ISR\":\"Israel\", \"KAZ\":\"Kazakhstan\", \n",
    "               \"AZE\":\"Azerbaijan\", \"HUN\":\"Hungary\", \"GRE\":\"Greece\", \"FIN\":\"Finland\", \"DEN\":\"Denmark\", \n",
    "                \"SWE\":\"Swedend\", \"CZE\":\"Czech Republic\", \"CYP\":\"Cyprus\", \"CRO\": \"Croatia\", \"BUL\":\"Bulgaria\", \n",
    "                \"BLR\":\"Belarus\", \"BEL\":\"Belguim\", \"UKR\":\"Ukraine\", \"MDA\" :\"Moldova\", \"IRL\":\"Ireland\", \n",
    "                \"ALB\":\"Albania\" , \"MLT\":\"Malta\", \"LVA\":\"Latvia\", \"NIR\":\"Northern Ireland\", \"LTU\":\"Lithuania\", \n",
    "               \"GEO\":\"Georgia\", \"ISL\":\"Iceland\", \"ARM\":\"Armenia\", \"BIH\":\"Bosnia and Herzegovina\",\n",
    "               \"LUX\":\"Luxemborg\", \"MKD\":\"North Macedonia\", \"EST\":\"Estonia\", \"WAL\":\"Wales\", \"FRO\":\"Faroe Island\",\n",
    "               \"MNE\":\"Montegro\", \"KOS\":\"Kosovo\", \"GIB\":\"Gibraltar\", \"AND\":\"Andorra\", \"SMR\":\"San Marino\"}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "54"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(country_dict)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "54"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Country_data['Country'].nunique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "Country_data.rename(columns={\"Country\":\"CountryCode\"},inplace=True)\n",
    "countries = []\n",
    "for i, code in Country_data[\"CountryCode\"].items():\n",
    "    country = country_dict[code]\n",
    "    countries.append(country)\n",
    "Country_data[\"Country\"]=countries"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "Country_data = Country_data[['Country','Participated','Titles','Played','Win','Draw','Loss','Goals For',\n",
    "                            'Goals Against','Pts','Goal Diff']]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Country</th>\n",
       "      <th>Participated</th>\n",
       "      <th>Titles</th>\n",
       "      <th>Played</th>\n",
       "      <th>Win</th>\n",
       "      <th>Draw</th>\n",
       "      <th>Loss</th>\n",
       "      <th>Goals For</th>\n",
       "      <th>Goals Against</th>\n",
       "      <th>Pts</th>\n",
       "      <th>Goal Diff</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Spain</td>\n",
       "      <td>148</td>\n",
       "      <td>19</td>\n",
       "      <td>1349</td>\n",
       "      <td>705</td>\n",
       "      <td>306</td>\n",
       "      <td>338</td>\n",
       "      <td>2427</td>\n",
       "      <td>1446</td>\n",
       "      <td>1716</td>\n",
       "      <td>981</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>England</td>\n",
       "      <td>136</td>\n",
       "      <td>14</td>\n",
       "      <td>1239</td>\n",
       "      <td>655</td>\n",
       "      <td>271</td>\n",
       "      <td>313</td>\n",
       "      <td>2218</td>\n",
       "      <td>1266</td>\n",
       "      <td>1581</td>\n",
       "      <td>952</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>Germany</td>\n",
       "      <td>166</td>\n",
       "      <td>8</td>\n",
       "      <td>1176</td>\n",
       "      <td>554</td>\n",
       "      <td>242</td>\n",
       "      <td>380</td>\n",
       "      <td>2070</td>\n",
       "      <td>1538</td>\n",
       "      <td>1350</td>\n",
       "      <td>532</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>Italy</td>\n",
       "      <td>138</td>\n",
       "      <td>12</td>\n",
       "      <td>1086</td>\n",
       "      <td>508</td>\n",
       "      <td>278</td>\n",
       "      <td>300</td>\n",
       "      <td>1662</td>\n",
       "      <td>1176</td>\n",
       "      <td>1294</td>\n",
       "      <td>486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>France</td>\n",
       "      <td>115</td>\n",
       "      <td>1</td>\n",
       "      <td>794</td>\n",
       "      <td>331</td>\n",
       "      <td>175</td>\n",
       "      <td>288</td>\n",
       "      <td>1187</td>\n",
       "      <td>981</td>\n",
       "      <td>837</td>\n",
       "      <td>206</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>106</td>\n",
       "      <td>4</td>\n",
       "      <td>680</td>\n",
       "      <td>280</td>\n",
       "      <td>156</td>\n",
       "      <td>244</td>\n",
       "      <td>1006</td>\n",
       "      <td>857</td>\n",
       "      <td>716</td>\n",
       "      <td>149</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>97</td>\n",
       "      <td>6</td>\n",
       "      <td>567</td>\n",
       "      <td>225</td>\n",
       "      <td>145</td>\n",
       "      <td>197</td>\n",
       "      <td>847</td>\n",
       "      <td>701</td>\n",
       "      <td>595</td>\n",
       "      <td>146</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Scotland</td>\n",
       "      <td>78</td>\n",
       "      <td>1</td>\n",
       "      <td>427</td>\n",
       "      <td>184</td>\n",
       "      <td>86</td>\n",
       "      <td>157</td>\n",
       "      <td>636</td>\n",
       "      <td>541</td>\n",
       "      <td>454</td>\n",
       "      <td>95</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Ukraine</td>\n",
       "      <td>66</td>\n",
       "      <td>0</td>\n",
       "      <td>418</td>\n",
       "      <td>167</td>\n",
       "      <td>94</td>\n",
       "      <td>157</td>\n",
       "      <td>576</td>\n",
       "      <td>554</td>\n",
       "      <td>428</td>\n",
       "      <td>22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Belguim</td>\n",
       "      <td>87</td>\n",
       "      <td>0</td>\n",
       "      <td>450</td>\n",
       "      <td>151</td>\n",
       "      <td>98</td>\n",
       "      <td>201</td>\n",
       "      <td>592</td>\n",
       "      <td>708</td>\n",
       "      <td>400</td>\n",
       "      <td>-116</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Greece</td>\n",
       "      <td>88</td>\n",
       "      <td>0</td>\n",
       "      <td>445</td>\n",
       "      <td>140</td>\n",
       "      <td>111</td>\n",
       "      <td>194</td>\n",
       "      <td>521</td>\n",
       "      <td>662</td>\n",
       "      <td>391</td>\n",
       "      <td>-141</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Russia</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>407</td>\n",
       "      <td>130</td>\n",
       "      <td>97</td>\n",
       "      <td>180</td>\n",
       "      <td>497</td>\n",
       "      <td>595</td>\n",
       "      <td>357</td>\n",
       "      <td>-98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Turkey</td>\n",
       "      <td>88</td>\n",
       "      <td>0</td>\n",
       "      <td>419</td>\n",
       "      <td>129</td>\n",
       "      <td>92</td>\n",
       "      <td>198</td>\n",
       "      <td>467</td>\n",
       "      <td>693</td>\n",
       "      <td>350</td>\n",
       "      <td>-226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Austria</td>\n",
       "      <td>78</td>\n",
       "      <td>0</td>\n",
       "      <td>335</td>\n",
       "      <td>128</td>\n",
       "      <td>63</td>\n",
       "      <td>144</td>\n",
       "      <td>485</td>\n",
       "      <td>517</td>\n",
       "      <td>319</td>\n",
       "      <td>-32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Czech Republic</td>\n",
       "      <td>72</td>\n",
       "      <td>0</td>\n",
       "      <td>324</td>\n",
       "      <td>122</td>\n",
       "      <td>73</td>\n",
       "      <td>129</td>\n",
       "      <td>417</td>\n",
       "      <td>466</td>\n",
       "      <td>317</td>\n",
       "      <td>-49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>Switzerland</td>\n",
       "      <td>79</td>\n",
       "      <td>0</td>\n",
       "      <td>337</td>\n",
       "      <td>119</td>\n",
       "      <td>68</td>\n",
       "      <td>150</td>\n",
       "      <td>469</td>\n",
       "      <td>571</td>\n",
       "      <td>306</td>\n",
       "      <td>-102</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>Serbia</td>\n",
       "      <td>52</td>\n",
       "      <td>1</td>\n",
       "      <td>265</td>\n",
       "      <td>116</td>\n",
       "      <td>58</td>\n",
       "      <td>91</td>\n",
       "      <td>443</td>\n",
       "      <td>346</td>\n",
       "      <td>290</td>\n",
       "      <td>97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>Romania</td>\n",
       "      <td>73</td>\n",
       "      <td>1</td>\n",
       "      <td>319</td>\n",
       "      <td>106</td>\n",
       "      <td>76</td>\n",
       "      <td>137</td>\n",
       "      <td>415</td>\n",
       "      <td>471</td>\n",
       "      <td>288</td>\n",
       "      <td>-56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>Swedend</td>\n",
       "      <td>67</td>\n",
       "      <td>0</td>\n",
       "      <td>288</td>\n",
       "      <td>104</td>\n",
       "      <td>61</td>\n",
       "      <td>123</td>\n",
       "      <td>363</td>\n",
       "      <td>431</td>\n",
       "      <td>269</td>\n",
       "      <td>-68</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>Poland</td>\n",
       "      <td>66</td>\n",
       "      <td>0</td>\n",
       "      <td>256</td>\n",
       "      <td>108</td>\n",
       "      <td>38</td>\n",
       "      <td>110</td>\n",
       "      <td>377</td>\n",
       "      <td>394</td>\n",
       "      <td>254</td>\n",
       "      <td>-17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>Hungary</td>\n",
       "      <td>66</td>\n",
       "      <td>0</td>\n",
       "      <td>262</td>\n",
       "      <td>101</td>\n",
       "      <td>51</td>\n",
       "      <td>110</td>\n",
       "      <td>411</td>\n",
       "      <td>434</td>\n",
       "      <td>253</td>\n",
       "      <td>-23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>74</td>\n",
       "      <td>0</td>\n",
       "      <td>289</td>\n",
       "      <td>92</td>\n",
       "      <td>63</td>\n",
       "      <td>134</td>\n",
       "      <td>365</td>\n",
       "      <td>478</td>\n",
       "      <td>247</td>\n",
       "      <td>-113</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>Bulgaria</td>\n",
       "      <td>62</td>\n",
       "      <td>0</td>\n",
       "      <td>248</td>\n",
       "      <td>88</td>\n",
       "      <td>49</td>\n",
       "      <td>111</td>\n",
       "      <td>352</td>\n",
       "      <td>374</td>\n",
       "      <td>225</td>\n",
       "      <td>-22</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>Norway</td>\n",
       "      <td>65</td>\n",
       "      <td>0</td>\n",
       "      <td>263</td>\n",
       "      <td>79</td>\n",
       "      <td>58</td>\n",
       "      <td>126</td>\n",
       "      <td>337</td>\n",
       "      <td>437</td>\n",
       "      <td>216</td>\n",
       "      <td>-100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>Croatia</td>\n",
       "      <td>37</td>\n",
       "      <td>0</td>\n",
       "      <td>195</td>\n",
       "      <td>81</td>\n",
       "      <td>42</td>\n",
       "      <td>72</td>\n",
       "      <td>283</td>\n",
       "      <td>260</td>\n",
       "      <td>204</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>Cyprus</td>\n",
       "      <td>56</td>\n",
       "      <td>0</td>\n",
       "      <td>211</td>\n",
       "      <td>64</td>\n",
       "      <td>45</td>\n",
       "      <td>102</td>\n",
       "      <td>230</td>\n",
       "      <td>364</td>\n",
       "      <td>173</td>\n",
       "      <td>-134</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>Slovakia</td>\n",
       "      <td>35</td>\n",
       "      <td>0</td>\n",
       "      <td>152</td>\n",
       "      <td>59</td>\n",
       "      <td>35</td>\n",
       "      <td>58</td>\n",
       "      <td>197</td>\n",
       "      <td>198</td>\n",
       "      <td>153</td>\n",
       "      <td>-1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>Israel</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "      <td>143</td>\n",
       "      <td>51</td>\n",
       "      <td>30</td>\n",
       "      <td>62</td>\n",
       "      <td>195</td>\n",
       "      <td>207</td>\n",
       "      <td>132</td>\n",
       "      <td>-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>Belarus</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>135</td>\n",
       "      <td>45</td>\n",
       "      <td>39</td>\n",
       "      <td>51</td>\n",
       "      <td>152</td>\n",
       "      <td>189</td>\n",
       "      <td>129</td>\n",
       "      <td>-37</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>Finland</td>\n",
       "      <td>60</td>\n",
       "      <td>0</td>\n",
       "      <td>181</td>\n",
       "      <td>51</td>\n",
       "      <td>25</td>\n",
       "      <td>105</td>\n",
       "      <td>191</td>\n",
       "      <td>388</td>\n",
       "      <td>127</td>\n",
       "      <td>-197</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>SLovenia</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>116</td>\n",
       "      <td>48</td>\n",
       "      <td>21</td>\n",
       "      <td>47</td>\n",
       "      <td>149</td>\n",
       "      <td>172</td>\n",
       "      <td>117</td>\n",
       "      <td>-23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>Moldova</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>108</td>\n",
       "      <td>41</td>\n",
       "      <td>20</td>\n",
       "      <td>47</td>\n",
       "      <td>122</td>\n",
       "      <td>118</td>\n",
       "      <td>102</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>Ireland</td>\n",
       "      <td>63</td>\n",
       "      <td>0</td>\n",
       "      <td>160</td>\n",
       "      <td>23</td>\n",
       "      <td>38</td>\n",
       "      <td>99</td>\n",
       "      <td>124</td>\n",
       "      <td>351</td>\n",
       "      <td>84</td>\n",
       "      <td>-227</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>Azerbaijan</td>\n",
       "      <td>23</td>\n",
       "      <td>0</td>\n",
       "      <td>85</td>\n",
       "      <td>28</td>\n",
       "      <td>25</td>\n",
       "      <td>32</td>\n",
       "      <td>83</td>\n",
       "      <td>103</td>\n",
       "      <td>81</td>\n",
       "      <td>-20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>Kazakhstan</td>\n",
       "      <td>19</td>\n",
       "      <td>0</td>\n",
       "      <td>71</td>\n",
       "      <td>27</td>\n",
       "      <td>19</td>\n",
       "      <td>25</td>\n",
       "      <td>89</td>\n",
       "      <td>101</td>\n",
       "      <td>73</td>\n",
       "      <td>-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>Albania</td>\n",
       "      <td>44</td>\n",
       "      <td>0</td>\n",
       "      <td>112</td>\n",
       "      <td>24</td>\n",
       "      <td>20</td>\n",
       "      <td>68</td>\n",
       "      <td>84</td>\n",
       "      <td>185</td>\n",
       "      <td>68</td>\n",
       "      <td>-101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>Malta</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>136</td>\n",
       "      <td>23</td>\n",
       "      <td>17</td>\n",
       "      <td>96</td>\n",
       "      <td>92</td>\n",
       "      <td>374</td>\n",
       "      <td>63</td>\n",
       "      <td>-282</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>Latvia</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>81</td>\n",
       "      <td>23</td>\n",
       "      <td>14</td>\n",
       "      <td>44</td>\n",
       "      <td>84</td>\n",
       "      <td>129</td>\n",
       "      <td>60</td>\n",
       "      <td>-45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>Northern Ireland</td>\n",
       "      <td>59</td>\n",
       "      <td>0</td>\n",
       "      <td>135</td>\n",
       "      <td>12</td>\n",
       "      <td>36</td>\n",
       "      <td>87</td>\n",
       "      <td>98</td>\n",
       "      <td>317</td>\n",
       "      <td>60</td>\n",
       "      <td>-219</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>Lithuania</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>78</td>\n",
       "      <td>22</td>\n",
       "      <td>14</td>\n",
       "      <td>42</td>\n",
       "      <td>81</td>\n",
       "      <td>130</td>\n",
       "      <td>58</td>\n",
       "      <td>-49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>Georgia</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>79</td>\n",
       "      <td>23</td>\n",
       "      <td>11</td>\n",
       "      <td>45</td>\n",
       "      <td>87</td>\n",
       "      <td>131</td>\n",
       "      <td>57</td>\n",
       "      <td>-44</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>Iceland</td>\n",
       "      <td>55</td>\n",
       "      <td>0</td>\n",
       "      <td>127</td>\n",
       "      <td>18</td>\n",
       "      <td>21</td>\n",
       "      <td>88</td>\n",
       "      <td>96</td>\n",
       "      <td>316</td>\n",
       "      <td>57</td>\n",
       "      <td>-220</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>Armenia</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>73</td>\n",
       "      <td>19</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>68</td>\n",
       "      <td>110</td>\n",
       "      <td>53</td>\n",
       "      <td>-42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>Bosnia and Herzegovina</td>\n",
       "      <td>25</td>\n",
       "      <td>0</td>\n",
       "      <td>66</td>\n",
       "      <td>20</td>\n",
       "      <td>9</td>\n",
       "      <td>37</td>\n",
       "      <td>65</td>\n",
       "      <td>107</td>\n",
       "      <td>49</td>\n",
       "      <td>-42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>Luxemborg</td>\n",
       "      <td>64</td>\n",
       "      <td>0</td>\n",
       "      <td>141</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>109</td>\n",
       "      <td>112</td>\n",
       "      <td>468</td>\n",
       "      <td>48</td>\n",
       "      <td>-356</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>North Macedonia</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>73</td>\n",
       "      <td>13</td>\n",
       "      <td>21</td>\n",
       "      <td>39</td>\n",
       "      <td>62</td>\n",
       "      <td>109</td>\n",
       "      <td>47</td>\n",
       "      <td>-47</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>Estonia</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>67</td>\n",
       "      <td>13</td>\n",
       "      <td>15</td>\n",
       "      <td>39</td>\n",
       "      <td>58</td>\n",
       "      <td>119</td>\n",
       "      <td>41</td>\n",
       "      <td>-61</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>Wales</td>\n",
       "      <td>26</td>\n",
       "      <td>0</td>\n",
       "      <td>63</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "      <td>41</td>\n",
       "      <td>55</td>\n",
       "      <td>146</td>\n",
       "      <td>37</td>\n",
       "      <td>-91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>Faroe Island</td>\n",
       "      <td>27</td>\n",
       "      <td>0</td>\n",
       "      <td>60</td>\n",
       "      <td>9</td>\n",
       "      <td>11</td>\n",
       "      <td>40</td>\n",
       "      <td>52</td>\n",
       "      <td>153</td>\n",
       "      <td>29</td>\n",
       "      <td>-101</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>Montegro</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>37</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>25</td>\n",
       "      <td>27</td>\n",
       "      <td>73</td>\n",
       "      <td>18</td>\n",
       "      <td>-46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>Kosovo</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>20</td>\n",
       "      <td>23</td>\n",
       "      <td>15</td>\n",
       "      <td>-3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>Gibraltar</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>6</td>\n",
       "      <td>3</td>\n",
       "      <td>11</td>\n",
       "      <td>23</td>\n",
       "      <td>35</td>\n",
       "      <td>15</td>\n",
       "      <td>-12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>Andorra</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>31</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>22</td>\n",
       "      <td>19</td>\n",
       "      <td>68</td>\n",
       "      <td>12</td>\n",
       "      <td>-49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>San Marino</td>\n",
       "      <td>15</td>\n",
       "      <td>0</td>\n",
       "      <td>26</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "      <td>9</td>\n",
       "      <td>66</td>\n",
       "      <td>5</td>\n",
       "      <td>-57</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Country  Participated  Titles  Played  Win  Draw  Loss  \\\n",
       "1                    Spain           148      19    1349  705   306   338   \n",
       "2                  England           136      14    1239  655   271   313   \n",
       "3                  Germany           166       8    1176  554   242   380   \n",
       "4                    Italy           138      12    1086  508   278   300   \n",
       "5                   France           115       1     794  331   175   288   \n",
       "6                 Portugal           106       4     680  280   156   244   \n",
       "7              Netherlands            97       6     567  225   145   197   \n",
       "8                 Scotland            78       1     427  184    86   157   \n",
       "9                  Ukraine            66       0     418  167    94   157   \n",
       "10                 Belguim            87       0     450  151    98   201   \n",
       "11                  Greece            88       0     445  140   111   194   \n",
       "12                  Russia            65       0     407  130    97   180   \n",
       "13                  Turkey            88       0     419  129    92   198   \n",
       "14                 Austria            78       0     335  128    63   144   \n",
       "15          Czech Republic            72       0     324  122    73   129   \n",
       "16             Switzerland            79       0     337  119    68   150   \n",
       "17                  Serbia            52       1     265  116    58    91   \n",
       "18                 Romania            73       1     319  106    76   137   \n",
       "19                 Swedend            67       0     288  104    61   123   \n",
       "20                  Poland            66       0     256  108    38   110   \n",
       "21                 Hungary            66       0     262  101    51   110   \n",
       "22                 Denmark            74       0     289   92    63   134   \n",
       "23                Bulgaria            62       0     248   88    49   111   \n",
       "24                  Norway            65       0     263   79    58   126   \n",
       "25                 Croatia            37       0     195   81    42    72   \n",
       "26                  Cyprus            56       0     211   64    45   102   \n",
       "27                Slovakia            35       0     152   59    35    58   \n",
       "28                  Israel            31       0     143   51    30    62   \n",
       "29                 Belarus            27       0     135   45    39    51   \n",
       "30                 Finland            60       0     181   51    25   105   \n",
       "31                SLovenia            27       0     116   48    21    47   \n",
       "32                 Moldova            26       0     108   41    20    47   \n",
       "33                 Ireland            63       0     160   23    38    99   \n",
       "34              Azerbaijan            23       0      85   28    25    32   \n",
       "35              Kazakhstan            19       0      71   27    19    25   \n",
       "36                 Albania            44       0     112   24    20    68   \n",
       "37                   Malta            58       0     136   23    17    96   \n",
       "38                  Latvia            27       0      81   23    14    44   \n",
       "39        Northern Ireland            59       0     135   12    36    87   \n",
       "40               Lithuania            27       0      78   22    14    42   \n",
       "41                 Georgia            27       0      79   23    11    45   \n",
       "42                 Iceland            55       0     127   18    21    88   \n",
       "43                 Armenia            26       0      73   19    15    39   \n",
       "44  Bosnia and Herzegovina            25       0      66   20     9    37   \n",
       "45               Luxemborg            64       0     141   16    16   109   \n",
       "46         North Macedonia            26       0      73   13    21    39   \n",
       "47                 Estonia            27       0      67   13    15    39   \n",
       "48                   Wales            26       0      63   15     7    41   \n",
       "49            Faroe Island            27       0      60    9    11    40   \n",
       "50                Montegro            15       0      37    6     6    25   \n",
       "51                  Kosovo             5       0      15    7     1     7   \n",
       "52               Gibraltar             8       0      20    6     3    11   \n",
       "53                 Andorra            15       0      31    3     6    22   \n",
       "54              San Marino            15       0      26    1     3    22   \n",
       "\n",
       "    Goals For  Goals Against   Pts  Goal Diff  \n",
       "1        2427           1446  1716        981  \n",
       "2        2218           1266  1581        952  \n",
       "3        2070           1538  1350        532  \n",
       "4        1662           1176  1294        486  \n",
       "5        1187            981   837        206  \n",
       "6        1006            857   716        149  \n",
       "7         847            701   595        146  \n",
       "8         636            541   454         95  \n",
       "9         576            554   428         22  \n",
       "10        592            708   400       -116  \n",
       "11        521            662   391       -141  \n",
       "12        497            595   357        -98  \n",
       "13        467            693   350       -226  \n",
       "14        485            517   319        -32  \n",
       "15        417            466   317        -49  \n",
       "16        469            571   306       -102  \n",
       "17        443            346   290         97  \n",
       "18        415            471   288        -56  \n",
       "19        363            431   269        -68  \n",
       "20        377            394   254        -17  \n",
       "21        411            434   253        -23  \n",
       "22        365            478   247       -113  \n",
       "23        352            374   225        -22  \n",
       "24        337            437   216       -100  \n",
       "25        283            260   204         23  \n",
       "26        230            364   173       -134  \n",
       "27        197            198   153         -1  \n",
       "28        195            207   132        -12  \n",
       "29        152            189   129        -37  \n",
       "30        191            388   127       -197  \n",
       "31        149            172   117        -23  \n",
       "32        122            118   102          4  \n",
       "33        124            351    84       -227  \n",
       "34         83            103    81        -20  \n",
       "35         89            101    73        -12  \n",
       "36         84            185    68       -101  \n",
       "37         92            374    63       -282  \n",
       "38         84            129    60        -45  \n",
       "39         98            317    60       -219  \n",
       "40         81            130    58        -49  \n",
       "41         87            131    57        -44  \n",
       "42         96            316    57       -220  \n",
       "43         68            110    53        -42  \n",
       "44         65            107    49        -42  \n",
       "45        112            468    48       -356  \n",
       "46         62            109    47        -47  \n",
       "47         58            119    41        -61  \n",
       "48         55            146    37        -91  \n",
       "49         52            153    29       -101  \n",
       "50         27             73    18        -46  \n",
       "51         20             23    15         -3  \n",
       "52         23             35    15        -12  \n",
       "53         19             68    12        -49  \n",
       "54          9             66     5        -57  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "Country_data.index = np.arange(1,len(Country_data.index)+1)\n",
    "Country_data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "Country_data.to_csv(\"../data-output/AllTimeRankingByCountry.csv\", header=True, index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def ParseFile(fileName, Unit):\n",
    "    Details = pd.DataFrame(columns=['Player', 'Club', Unit])\n",
    "    Totals = pd.DataFrame(columns=['Player', Unit])\n",
    "\n",
    "    f = open(fileName, \"r\", encoding='utf-8')\n",
    "    lines = f.readlines()\n",
    "    for line in lines:\n",
    "        #x = re.findall('\\[[^\\]]*\\]|\\([^\\)]*\\)|\\\"[^\\\"]*\\\"|\\S+',line)\n",
    "\n",
    "        player = re.split('\\(', line)\n",
    "        player = player[0].strip()\n",
    "\n",
    "        if (line[-4] == '('):\n",
    "            line = line[:-4]\n",
    "\n",
    "        totalgames = re.findall('\\S+', line)\n",
    "        totalgames = totalgames[-1].strip()\n",
    "\n",
    "        PlayerTotalSer = pd.Series([player,totalgames], index=['Player', Unit])\n",
    "        Totals = Totals.append(PlayerTotalSer, ignore_index=True)\n",
    "\n",
    "        clubs_string =[]\n",
    "        clubs_string = re.findall('\\([^\\)]*\\)', line)\n",
    "        clubs_string = clubs_string[0].strip('(').strip(')')\n",
    "        clubs = clubs_string.split(',')\n",
    "\n",
    "        for i, club in enumerate(clubs):\n",
    "            tempclub = club.partition('[')\n",
    "            tempAppear = tempclub[-1][:-1].strip()\n",
    "            if (tempAppear == ''):\n",
    "                tempAppear = totalgames \n",
    "            playerSer = pd.Series([player, tempclub[0].strip(), tempAppear], index = ['Player', 'Club', Unit] )       \n",
    "            Details = Details.append(playerSer, ignore_index=True)\n",
    "\n",
    "\n",
    "        del clubs_string, clubs\n",
    "    f.close()\n",
    "    Details.columns.str.strip()\n",
    "    Totals.columns.str.strip()\n",
    "    return Details, Totals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "PlayerAppearDetails, PlayerAppearTotals = ParseFile(\"./raw-data/players.txt\", \"Appearances\")\n",
    "PlayerGoalDetails, PlayerGoalTotals = ParseFile(\"./raw-data/playergoals.txt\", \"Goals\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "PlayerAppearDetails.to_csv(\"../data-output/PlayerAppearDetails.csv\", header=True, index=True)\n",
    "PlayerAppearTotals.to_csv(\"../data-output/PlayerAppearTotals.csv\", header=True, index=True)\n",
    "PlayerGoalDetails.to_csv(\"../data-output/PlayerGoalDetails.csv\", header=True, index=True)\n",
    "PlayerGoalTotals.to_csv(\"../data-output/PlayerGoalTotals.csv\", header=True, index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [],
   "source": [
    "CoachesAppearDetails, CoachesAppearTotals = ParseFile(\"./raw-data/Coaches.txt\", \"Appearance\")\n",
    "CoachesAppearDetails.rename({\"Player\":\"Coach\"},axis=1, inplace=True)\n",
    "CoachesAppearTotals.rename({\"Player\":\"Coach\"},axis=1, inplace=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [],
   "source": [
    "CoachesAppearTotals\n",
    "CoachesAppearDetails.to_csv(os.path.join(path,\"../data-output/CoachesAppearDetails.csv\"), header=True, index=True)\n",
    "CoachesAppearTotals.to_csv(os.path.join(path,\"../data-output/CoachesAppearTotals.csv\"), header=True, index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "TopGoalScorer = pd.DataFrame(columns=['Year', 'Player', 'Club', 'Goals', 'Appearances'])\n",
    "\n",
    "f = open(\"./raw-data/TopGoalScorers.txt\", \"r\", encoding='utf-8')\n",
    "lines = f.readlines()\n",
    "for line in lines:\n",
    "    year = line[:7]\n",
    "    temp = line[7:].partition('(')\n",
    "    player = temp[0]\n",
    "    temp = temp[2].partition(')')\n",
    "    club = temp[0]\n",
    "    temp = temp[2].partition('(')\n",
    "    NumOfGoals = temp[0]\n",
    "    Appear = temp[2][:-2]\n",
    "    \n",
    "    PlayerSer = pd.Series ([year, player , club , NumOfGoals, Appear], \n",
    "                          index=['Year', 'Player', 'Club', 'Goals', 'Appearances'])\n",
    "    TopGoalScorer = TopGoalScorer.append(PlayerSer, ignore_index=True)\n",
    "    del PlayerSer\n",
    "    #print(year + \" --> \" + player + \" --> \" + club + \" --> \" + NumOfGoals + \" --> \" + Appear)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "TopGoalScorer.to_csv(\"../data-output/TopGoalScorer.csv\", header=True, index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "f = open(\"./raw-data/GoalStatsPerRound.txt\", \"r\", encoding='utf-8')\n",
    "Header = f.readline()\n",
    "Header = Header.split()\n",
    "GoalStatsPerRound = pd.DataFrame(columns=Header)\n",
    "\n",
    "lines = f.readlines()\n",
    "for line in lines:\n",
    "    splitline = line.split()\n",
    "    splitline[0] = splitline[0].replace('-',' ').replace('Stage2', 'Stage 2')\n",
    "    TempSer = pd.Series(splitline, index=Header)\n",
    "    GoalStatsPerRound = GoalStatsPerRound.append(TempSer, ignore_index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [],
   "source": [
    "GoalStatsPerRound.to_csv(os.path.join(path, 'GoalStatsPerGroupRound.csv'), header=True, index=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.5"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  },
  "varInspector": {
   "cols": {
    "lenName": 16,
    "lenType": 16,
    "lenVar": 40
   },
   "kernels_config": {
    "python": {
     "delete_cmd_postfix": "",
     "delete_cmd_prefix": "del ",
     "library": "var_list.py",
     "varRefreshCmd": "print(var_dic_list())"
    },
    "r": {
     "delete_cmd_postfix": ") ",
     "delete_cmd_prefix": "rm(",
     "library": "var_list.r",
     "varRefreshCmd": "cat(var_dic_list()) "
    }
   },
   "types_to_exclude": [
    "module",
    "function",
    "builtin_function_or_method",
    "instance",
    "_Feature"
   ],
   "window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
